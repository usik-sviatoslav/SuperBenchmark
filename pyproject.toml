[tool.poetry]
name = "superbenchmark"
version = "0.1.0"
description = ""
authors = ["usik-sviatoslav <usik.sviatoslav.dev@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.115.4"
uvicorn = "^0.32.0"
python-dotenv = "^1.0.1"

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.0.1"
flake8 = "^7.1.1"
flake8-pyproject = "^1.2.3"
flake8-variables-names = "^0.0.6"
flake8-functions = "^0.0.8"
flake8-class-attributes-order = "^0.1.3"
black = "^24.10.0"
isort = "^5.13.2"
mypy = "^1.13.0"
httpx = "^0.27.2"
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
pytest-mock = "^3.14.0"
pytest-cov = "^6.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true

[tool.black]
line-length = 120

[tool.flake8]
max-line-length = 120
exclude = [".env", ".git", "poetry.lock", ".pytest_cache", "__pycache__", "venv"]
max-complexity = 8
ignore = []

[tool.mypy]
python_version = "3.11"
ignore_missing_imports = false
strict_optional = false
warn_unused_configs = true
check_untyped_defs = true

[tool.pytest.ini_options]
python_files = ["tests.py", "test_*.py", "*_test.py"]
addopts = ["-x", "--ff", "--nf", "-W error", "--color=yes"]
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
branch = true
data_file = "htmlcov/.coverage"
omit = ["app/main.py"]
